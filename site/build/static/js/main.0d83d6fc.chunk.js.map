{"version":3,"sources":["pages/Auth/Auth.module.css","pages/Dashboard/Dashboard.module.css","fragments/Loading/Loading.module.css","pages/Home/Home.js","fragments/Loading/Loading.js","config/config.local.js","config/config.prod.js","config/config.js","utils/helpers.js","utils/api.js","pages/Auth/Auth.js","pages/Dashboard/Dashboard.js","App.js","index.js","pages/Home/Home.module.css"],"names":["module","exports","Home","Component","render","React","createElement","className","concat","styles","container","containerInner","heroArtwork","draggable","src","alt","heroTitle","heroDescription","containerCta","Link","to","linkSignIn","Loading","constructor","props","super","this","state","config","domains","frontend","api","routes","register","login","userGet","method","saveSession","userId","userEmail","userToken","Cookies","set","console","log","getSession","data","get","session","JSON","parse","async","requestApi","Authorization","token","_config$domains","route","arguments","length","undefined","headers","Error","path","url","Object","assign","response","fetch","toUpperCase","mode","cache","body","stringify","ok","error","json","Auth","loading","formEmail","formPassword","formUsername","formRole","formError","handleFormInput","bind","handleFormSubmit","handleRegisterClick","handleLoginClick","field","value","trim","nextState","setState","evt","preventDefault","authType","requestBody","email","password","username","role","sendFormData","userData","user","id","history","push","message","logo","containerLoading","containerRegister","form","onSubmit","formField","formLabel","type","placeholder","formInput","onChange","e","target","formButton","switchAuthType","switchButton","customButton","onClick","withRouter","Dashboard","logout","userSession","remove","navigationContainer","contentContainer","artwork","welcomeMessage","App","handleRegister","userRegister","handleLogin","userLogin","Router","Switch","Route","PrivateRoute","component","exact","Redirect","_ref","rest","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d83d6fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__2I7ZI\",\"containerInner\":\"Auth_containerInner__2Ad-D\",\"containerLoading\":\"Auth_containerLoading__GK7aI\",\"logo\":\"Auth_logo__cB8rF\",\"formType\":\"Auth_formType__3Vam1\",\"error\":\"Auth_error__1yPH3\",\"success\":\"Auth_success__gCr7e\",\"formTypeRegister\":\"Auth_formTypeRegister__34am6\",\"formTypeSignIn\":\"Auth_formTypeSignIn__ZUGnB\",\"formTypeActive\":\"Auth_formTypeActive__10X1I\",\"form\":\"Auth_form__q4yyV\",\"formField\":\"Auth_formField__1jV6M\",\"formLabel\":\"Auth_formLabel__3eAsh\",\"formInput\":\"Auth_formInput__1gOln\",\"formError\":\"Auth_formError__1EE00\",\"formButton\":\"Auth_formButton__3mJT5\",\"forgotPassword\":\"Auth_forgotPassword__1SM6o\",\"githubLink\":\"Auth_githubLink__2BpKa\",\"successMessage\":\"Auth_successMessage__2YZBB\",\"switchAuthType\":\"Auth_switchAuthType__33e61\",\"switchButton\":\"Auth_switchButton__2YM2r\",\"customButton\":\"Auth_customButton__1xR-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dashboard_container__1qbiH\",\"containerInner\":\"Dashboard_containerInner__1UfLk\",\"navigationContainer\":\"Dashboard_navigationContainer__39wa-\",\"contentContainer\":\"Dashboard_contentContainer__wUDh-\",\"welcomeMessage\":\"Dashboard_welcomeMessage__3B5nu\",\"artwork\":\"Dashboard_artwork__1J6WL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loading_container__Znt6o\",\"pulse\":\"Loading_pulse__-Ma2O\"};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Home.module.css';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`${styles.container} animateFadeIn`}>\r\n        <div className={styles.containerInner}>\r\n          <div className={`${styles.heroArtwork} animateFlicker`}>\r\n            <img draggable='false' src={'./fullstack-app-artwork.png'} alt='serverless-fullstack-application' />\r\n          </div>\r\n          <div className={`${styles.heroTitle}`}>\r\n            <img draggable='false' src={'./fullstack-app-title.png'} alt='serverless-fullstack-application' />\r\n          </div>\r\n          <div className={`${styles.heroDescription}`}>\r\n          Aplicación sin servidor en GCP con Cloud Build, Storage, Kubernetes y pruebas automatizadas con Jenkins\r\n          </div>\r\n          { /* Call To Action */}\r\n\r\n          <div className={`${styles.containerCta}`}>\r\n\r\n            <Link to='/public/users/register'>\r\n              <button className={`buttonPrimaryLarge`}>\r\n                Registro\r\n              </button>\r\n            </Link>\r\n\r\n            <Link to='/public/users/login' className={`${styles.linkSignIn}`}>Iniciar Sesion</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react'\r\nimport styles from './Loading.module.css'\r\n\r\nexport default class Loading extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  async componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${this.props.className}`}>\r\n        <div className={`${styles.container}`}>\r\n\r\n        <img\r\n          draggable={false}\r\n          alt={`Loading`}\r\n          src={\r\n            // Si no estás utilizando AWS, asegúrate de cambiar esta URL a la correspondiente a tu plataforma\r\n            'https://s3.amazonaws.com/dashboard.serverless.com/images/icon-serverless-framework.png'\r\n          }\r\n        />\r\n\r\n          <p>loading...</p>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","const config = {};\r\n\r\nconfig.domains = {};\r\nconfig.domains.frontend = \"http://localhost:3002\";\r\nconfig.domains.api = \"http://localhost:3000\";\r\n\r\nconfig.routes = {\r\n  register: \"/public/users/register\",\r\n  login: \"/public/users/login\",\r\n  userGet: \"/protected/user\"\r\n};\r\n\r\nconfig.method = \"POST\"; // Agrega el método POST aquí\r\n\r\nexport default config;\r\n","const config = {};\r\n\r\nconfig.domains = {};\r\nconfig.domains.api = \"http://10.60.3.168:80\";\r\n\r\nexport default config;\r\n","import localConfig from './config.local';\r\nimport prodConfig from './config.prod';\r\n\r\nconst config = process.env.NODE_ENV === 'production' ? prodConfig : localConfig;\r\n\r\nexport default config;\r\n","import Cookies from 'js-cookie';\r\n\r\n/**\r\n * Formatear Org y Username correctamente para el backend de Serverless Platform\r\n */\r\nexport const formatOrgAndUsername = (name = '') => {\r\n   name = name.toString().toLowerCase().replace(/[^a-z\\d-]+/gi, '-');\r\n   // Eliminar múltiples instancias de guiones\r\n   name = name.replace(/-{2,}/g, '-');\r\n   if (name.length > 40) {\r\n     name = name.substring(0, 40);\r\n   }\r\n   return name;\r\n};\r\n\r\n/**\r\n * Analizar parámetros de consulta en una URL\r\n * @param {*} searchString \r\n */\r\nexport const parseQueryParams = (searchString = null) => {\r\n  if (!searchString) {\r\n    return null;\r\n  }\r\n\r\n  // Clonar cadena\r\n  let clonedParams = (' ' + searchString).slice(1);\r\n\r\n  return clonedParams\r\n    .substr(1)\r\n    .split('&')\r\n    .filter((el) => el.length)\r\n    .map((el) => el.split('='))\r\n    .reduce(\r\n      (accumulator, currentValue) =>\r\n        Object.assign(accumulator, {\r\n          [decodeURIComponent(currentValue.shift())]: decodeURIComponent(currentValue.pop())\r\n        }),\r\n      {}\r\n    );\r\n};\r\n\r\n/**\r\n * Analizar fragmentos de hash en una URL\r\n */\r\nexport const parseHashFragment = (hashString) => {\r\n  const hashData = {};\r\n  let hash = decodeURI(hashString);\r\n  hash = hash.split('&');\r\n  hash.forEach((val) => {\r\n    val = val.replace('#', '');\r\n    hashData[val.split('=')[0]] = val.split('=')[1];\r\n  });\r\n  return hashData;\r\n};\r\n\r\n/**\r\n * Guardar sesión en cookie del navegador\r\n */\r\nexport const saveSession = (userId, userEmail, userToken) => {\r\n  Cookies.set('serverless', { userId, userEmail, userToken });\r\n  console.log('Sesión guardada:', { userId, userEmail, userToken });\r\n};\r\n\r\n/**\r\n * Obtener sesión en cookie del navegador\r\n */\r\nexport const getSession = () => {\r\n  const data = Cookies.get('serverless');\r\n  const session = data ? JSON.parse(data) : null;\r\n  console.log('Sesión recuperada:', session);\r\n  return session;\r\n};\r\n\r\n\r\n/**\r\n * Eliminar sesión en cookie del navegador\r\n */\r\nexport const deleteSession = () => {\r\n  Cookies.remove('serverless');\r\n  console.log('Sesión eliminada');\r\n};\r\n","import config from '../config/config';\r\n\r\n/**\r\n * Registra un nuevo usuario.\r\n * @param {string} email - Correo electrónico del usuario.\r\n * @param {string} password - Contraseña del usuario.\r\n * @param {string} username - Nombre de usuario del usuario.\r\n * @param {string} role - Rol del usuario.\r\n * @returns {Promise} - Promesa que se resuelve con la respuesta de la API.\r\n */\r\nexport const userRegister = async (email, password, username, role) => {\r\n  console.log(`Calling requestApi from userRegister with method: ${config.method}`);\r\n  return await requestApi('register', config.method, { email, password, username, role });\r\n};\r\n\r\n/**\r\n * Inicia sesión de un usuario.\r\n * @param {string} email - Correo electrónico del usuario.\r\n * @param {string} password - Contraseña del usuario.\r\n * @returns {Promise} - Promesa que se resuelve con la respuesta de la API.\r\n */\r\nexport const userLogin = async (email, password) => {\r\n  console.log(`Calling requestApi from userLogin with method: ${config.method}`);\r\n  return await requestApi('login', config.method, { email, password });\r\n};\r\n\r\n/**\r\n * Obtiene los datos del usuario.\r\n * @param {string} token - Token de autenticación del usuario.\r\n * @returns {Promise} - Promesa que se resuelve con la respuesta de la API.\r\n */\r\nexport const userGet = async (token) => {\r\n  console.log(`Calling requestApi from userGet with method: ${config.method}`);\r\n  return await requestApi('userGet', config.method, null, {\r\n    Authorization: `Bearer ${token}`\r\n  });\r\n};\r\n\r\n/**\r\n * Petición API para llamar al backend.\r\n * @param {string} route - Ruta de la API.\r\n * @param {string} method - Método HTTP de la petición.\r\n * @param {Object|null} data - Datos a enviar en la petición (por defecto es null).\r\n * @param {Object} headers - Cabeceras de la petición (por defecto es un objeto vacío).\r\n * @returns {Promise} - Promesa que se resuelve con los datos obtenidos de la API.\r\n */\r\nexport const requestApi = async (\r\n  route = '',\r\n  method = config.method,\r\n  data = null,\r\n  headers = {}\r\n) => {\r\n  // Verificar si se ha configurado la URL de la API\r\n  if (!config?.domains?.api) {\r\n    throw new Error(`Error: Falta el dominio de la API. Por favor, agrega el dominio de la API de tu backend Express.js sin servidor a esta aplicación front-end.`);\r\n  }\r\n\r\n  // Obtener la ruta desde la configuración de rutas\r\n  const path = config.routes[route];\r\n\r\n  // Lanzar un error si la ruta no se encuentra\r\n  if (!path) {\r\n    throw new Error(`Error: Ruta '${route}' no encontrada en la configuración.`);\r\n  }\r\n\r\n  // Preparar la URL\r\n  const url = `${config.domains.api}${path}`;\r\n\r\n  // Establecer las cabeceras\r\n  headers = Object.assign(\r\n    { 'Content-Type': 'application/json' },\r\n    headers\r\n  );\r\n\r\n  // Las opciones por defecto están marcadas con *\r\n  const response = await fetch(url, {\r\n    method: method.toUpperCase(),\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    headers,\r\n    body: data ? JSON.stringify(data) : null\r\n  });\r\n\r\n  // Lanzar un error si la respuesta no es satisfactoria\r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw new Error(error.error || 'Fallo al obtener datos del servidor.');\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Loading from '../../fragments/Loading';\r\nimport styles from './Auth.module.css';\r\nimport config from '../../config/config';\r\nimport { userGet, saveSession, requestApi } from '../../utils';\r\n\r\nclass Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      formEmail: '',\r\n      formPassword: '',\r\n      formUsername: '',\r\n      formRole: '',\r\n      formError: '',\r\n    };\r\n    this.handleFormInput = this.handleFormInput.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.handleRegisterClick = this.handleRegisterClick.bind(this);\r\n    this.handleLoginClick = this.handleLoginClick.bind(this);\r\n  }\r\n\r\n  handleFormInput(field, value) {\r\n    value = value.trim();\r\n    const nextState = {};\r\n    nextState[field] = value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  async handleFormSubmit(evt) {\r\n    evt.preventDefault();\r\n    console.log('Formulario enviado');\r\n    this.setState({ loading: true });\r\n    const { formEmail, formPassword, formUsername, formRole } = this.state;\r\n\r\n    if (!formEmail || !formPassword) {\r\n      return this.setState({\r\n        formError: 'Correo electrónico y contraseña son obligatorios',\r\n        loading: false,\r\n      });\r\n    }\r\n\r\n    try {\r\n      const apiUrl = config.domains.api;\r\n      let token;\r\n      if (this.props.authType === 'register') {\r\n        if (!formUsername || !formRole) {\r\n          return this.setState({\r\n            formError: 'Todos los campos son obligatorios',\r\n            loading: false,\r\n          });\r\n        }\r\n        const requestBody = {\r\n          email: formEmail,\r\n          password: formPassword,\r\n          username: formUsername,\r\n          role: formRole,\r\n        };\r\n        token = await this.sendFormData(requestBody, 'register');\r\n        console.log('Token generado:', token);\r\n        const userData = await userGet(token.token, apiUrl);\r\n        saveSession(userData.user.id, formEmail, token.token);\r\n        this.setState({ loading: false });\r\n        console.log('Redirigiendo a /public/users/login');\r\n        this.props.history.push('/public/users/login');\r\n\r\n      } else if (this.props.authType === 'login') {\r\n        token = await this.sendFormData({ email: formEmail, password: formPassword }, 'login');\r\n        console.log('Token generado:', token);\r\n        const userData = await userGet(token.token, apiUrl);\r\n        saveSession(userData.user.id, formEmail, token.token);\r\n        this.setState({ loading: false });\r\n        console.log('Redirigiendo a /dashboard');\r\n        this.props.history.push('/dashboard');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error en la solicitud:', error);\r\n      this.setState({\r\n        formError: error.message || 'Lo siento, ocurrió un error desconocido. Por favor, inténtalo de nuevo.',\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  async sendFormData(data, route) {\r\n    try {\r\n      const response = await requestApi(route, config.method, data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error en la solicitud:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  handleRegisterClick() {\r\n    console.log('Redirigiendo a /public/users/register');\r\n    this.props.history.push('/public/users/register');\r\n  }\r\n\r\n  handleLoginClick() {\r\n    console.log('Redirigiendo a /public/users/login');\r\n    this.props.history.push('/public/users/login');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${styles.container} animateFadeIn`}>\r\n        <div className={styles.containerInner}>\r\n          <Link to='/' className={styles.logo}>\r\n            <img draggable='false' src='/fullstack-app-title.png' alt='serverless-fullstack-application' />\r\n          </Link>\r\n          {this.state.loading && <div><Loading className={styles.containerLoading} /></div>}\r\n          {!this.state.loading && (\r\n            <div className={styles.containerRegister}>\r\n              <form className={styles.form} onSubmit={this.handleFormSubmit}>\r\n                <div className={styles.formField}>\r\n                  <label className={styles.formLabel}>Correo electrónico</label>\r\n                  <input\r\n                    type='text'\r\n                    placeholder='tucorreo@example.com'\r\n                    className={styles.formInput}\r\n                    value={this.state.formEmail}\r\n                    onChange={(e) => this.handleFormInput('formEmail', e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className={styles.formField}>\r\n                  <label className={styles.formLabel}>Contraseña</label>\r\n                  <input\r\n                    type='password'\r\n                    placeholder='tu contraseña'\r\n                    className={styles.formInput}\r\n                    value={this.state.formPassword}\r\n                    onChange={(e) => this.handleFormInput('formPassword', e.target.value)}\r\n                  />\r\n                </div>\r\n                {this.props.authType === 'register' && (\r\n                  <div>\r\n                    <div className={styles.formField}>\r\n                      <label className={styles.formLabel}>Nombre de usuario</label>\r\n                      <input\r\n                        type='text'\r\n                        placeholder='tu nombre de usuario'\r\n                        className={styles.formInput}\r\n                        value={this.state.formUsername}\r\n                        onChange={(e) => this.handleFormInput('formUsername', e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className={styles.formField}>\r\n                      <label className={styles.formLabel}>Rol</label>\r\n                      <input\r\n                        type='text'\r\n                        placeholder='tu rol'\r\n                        className={styles.formInput}\r\n                        value={this.state.formRole}\r\n                        onChange={(e) => this.handleFormInput('formRole', e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {this.state.formError && (\r\n                  <div className={styles.formError}>{this.state.formError}</div>\r\n                )}\r\n                <button\r\n                  className={`buttonPrimaryLarge ${styles.formButton}`}\r\n                  type='submit'\r\n                >\r\n                  {this.props.authType === 'register' ? 'Registrar' : 'Iniciar sesión'}\r\n                </button>\r\n              </form>\r\n              <div className={styles.switchAuthType}>\r\n                <span>{this.props.authType === 'register' ? '¿Ya tienes una cuenta?' : '¿No tienes una cuenta?'}</span>\r\n                <button className={`${styles.switchButton} ${styles.customButton}`} onClick={this.props.authType === 'register' ? this.handleLoginClick : this.handleRegisterClick}>\r\n                  {this.props.authType === 'register' ? 'Iniciar sesión' : 'Registrarse'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Auth);\r\n","import React, { Component } from 'react'\r\nimport { \r\n  withRouter \r\n} from 'react-router-dom'\r\nimport styles from './Dashboard.module.css'\r\nimport {\r\n  getSession,\r\n  deleteSession \r\n} from '../../utils'\r\n\r\nclass Dashboard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n\r\n    // Bindings\r\n    this.logout = this.logout.bind(this)\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    const userSession = getSession()\r\n\r\n    this.setState({\r\n      session: userSession,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Log user out by clearing cookie and redirecting\r\n   */\r\n  logout() {\r\n    deleteSession()\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={`${styles.container} animateFadeIn`}>\r\n        <div className={styles.containerInner}>\r\n\r\n          { /* Navigation */ }\r\n\r\n          <div className={styles.navigationContainer}>\r\n            <div \r\n              className={`link`}>\r\n                { this.state.session ? this.state.session.userEmail : '' }\r\n              </div>\r\n            <div \r\n              className={`link`}\r\n              onClick={this.logout}>\r\n                logout\r\n              </div>\r\n          </div>\r\n\r\n          { /* Content */ }\r\n\r\n          <div className={`${styles.contentContainer}`}>\r\n\r\n            <div className={`${styles.artwork} animateFlicker`}>\r\n              <img \r\n                draggable='false'\r\n                src={'./fullstack-app-artwork.png'} \r\n                alt='serverless-fullstack-application' \r\n              />\r\n            </div>\r\n\r\n            <div className={`${styles.welcomeMessage}`}>\r\n            Bienvenido a tu panel de control de aplicación fullstack sin servidor...\r\n            </div>\r\n\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard)","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport Home from './pages/Home/Home';\r\nimport Auth from './pages/Auth/Auth';\r\nimport Dashboard from './pages/Dashboard/Dashboard';\r\nimport { userRegister, userLogin } from './utils/api';\r\nimport { getSession, saveSession } from './utils';\r\n\r\nclass App extends Component {\r\n  async componentDidMount() {\r\n    // console.log(getSession())\r\n  }\r\n\r\n  handleRegister = async (email, password, username, role) => {\r\n    try {\r\n      await userRegister(email, password, username, role);\r\n      // Redirigir a la página de Dashboard después de registrarse\r\n      this.props.history.push('/public/users/login');\r\n      } catch (error) {\r\n      console.error('Error during registration:', error);\r\n      // Manejar errores de registro\r\n    }\r\n  };\r\n\r\n  handleLogin = async (email, password) => {\r\n    try {\r\n      const userData = await userLogin(email, password);\r\n      saveSession(userData.userId, userData.userEmail, userData.userToken); // Actualiza el manejo de la sesión aquí\r\n      this.props.history.push('/dashboard');\r\n      // Redirigir a la página de Dashboard después de iniciar sesión\r\n      \r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      // Manejar errores de inicio de sesión\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    const session = getSession();\r\n    console.log('App - Session:', session); //  verificar la sesión\r\n\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/public/users/register'>\r\n            <Auth authType=\"register\" handleRegister={this.handleRegister} />\r\n          </Route>\r\n\r\n          <Route path='/public/users/login'>\r\n            <Auth authType=\"login\" handleLogin={this.handleLogin} />\r\n          </Route>\r\n\r\n          <PrivateRoute path=\"/dashboard\" component={Dashboard} session={session} />\r\n          <Route exact path=\"/\" component={Home} />\r\n\r\n          {/* Ruta de redirección por defecto */}\r\n          <Route>\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, session, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        session ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n/**\r\n * Render App\r\n */\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3aQQu\",\"containerInner\":\"Home_containerInner__1cANM\",\"heroArtwork\":\"Home_heroArtwork__3V3Hj\",\"heroTitle\":\"Home_heroTitle__ZMf68\",\"heroDescription\":\"Home_heroDescription__3SzoG\",\"containerCta\":\"Home_containerCta__pghC2\",\"linkSignIn\":\"Home_linkSignIn__3ozps\"};"],"sourceRoot":""}