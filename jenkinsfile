pipeline {
    agent any
    
    environment {
        // Obtener la rama real del repositorio de GitHub
        BRANCH_NAME = "${env.GIT_BRANCH}"
        GCP_PROJECT_ID = 'jenkinsgpc' // ID del proyecto en GCP
        CLOUD_BUILD_SERVICE_ACCOUNT = '606820346362@cloudbuild.gserviceaccount.com' // Cuenta de servicio de Cloud Build
    }
    
    stages {
        stage('Unit Tests') {
            steps {
                script {
                    // Ejecutar pruebas unitarias con Jest y SuperTest
                    sh 'npm install --prefix ./api'
                    sh 'npm run test --prefix ./api'
                }
            }
        }
        
        stage('Cloud Build') {
            steps {
                // Ejecutar el comando de Cloud Build desde la l√≠nea de comandos de Jenkins
                script {
                    def output = sh(script: """
                        gcloud builds submit \
                        --config=cloudbuild.yaml \
                        --project=${GCP_PROJECT_ID} \
                        --account=${CLOUD_BUILD_SERVICE_ACCOUNT} \
                        .
                    """, returnStdout: true)
                    println(output)
                }
            }
        }
    }
}
