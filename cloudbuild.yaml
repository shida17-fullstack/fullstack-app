steps:
  # Paso para construir la imagen Docker del backend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/jenkinsgpc/jenkinsgpc-backend:v1', './api']
  
  # Paso para empujar la imagen Docker del backend a GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/jenkinsgpc/jenkinsgpc-backend:v1']

  # Paso para construir la imagen Docker del frontend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/jenkinsgpc/jenkinsgpc-frontend:v1', './site']

  # Paso para empujar la imagen Docker del frontend a GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/jenkinsgpc/jenkinsgpc-frontend:v1']

# Paso para desplegar la aplicación en Kubernetes utilizando gke-deploy
- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
    - run
    - '--filename=./api/deployment-backend.yaml,./site/deployment-frontend.yaml'
    - '--location=us-central1-c'
    - '--cluster=jenkins-cicd-cluster'

# Especifica la ubicación del bucket de Cloud Storage para almacenar las imágenes
artifacts:
  objects:
    location: 'gs://proyecto-jenkins-gcp/'  # Ubicación para almacenar las imágenes Docker
    paths:
      - 'api/*'  # Ruta para los artefactos del backend
      - 'site/*'  # Ruta para los artefactos del frontend

# Especifica el nombre del bucket para los registros de la compilación
logsBucket: 'gs://proyecto-jenkins-gcp'
