steps:
  # Paso para construir y empujar la imagen Docker del backend a GCR
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/jenkinsgpc/jenkinsgpc-backend:$COMMIT_SHA'  # Etiqueta única basada en el SHA del commit
      - './api'
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'gcr.io/jenkinsgpc/jenkinsgpc-backend:$COMMIT_SHA'

  # Paso para construir y empujar la imagen Docker del frontend a GCR
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/jenkinsgpc/jenkinsgpc-frontend:$COMMIT_SHA'  # Etiqueta única basada en el SHA del commit
      - './site'
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/jenkinsgpc/jenkinsgpc-frontend:$COMMIT_SHA'

  # Pasos para desplegar la aplicación en Kubernetes utilizando gke-deploy
  - name: 'gcr.io/cloud-builders/gke-deploy'
    args:
      - 'run'
      - '--filename=./api/deployment-backend.yaml'
      - '--image=gcr.io/jenkinsgpc/jenkinsgpc-backend:$COMMIT_SHA'
      - '--location=us-central1-c'
      - '--cluster=jenkins-cicd-cluster'

  - name: 'gcr.io/cloud-builders/gke-deploy'
    args:
      - 'run'
      - '--filename=./site/deployment-frontend.yaml'
      - '--image=gcr.io/jenkinsgpc/jenkinsgpc-frontend:$COMMIT_SHA'
      - '--location=us-central1-c'
      - '--cluster=jenkins-cicd-cluster'

# Especifica la ubicación del bucket de Cloud Storage para almacenar las imágenes y artefactos
artifacts:
  objects:
    location: 'gs://proyecto-jenkins-gcp/'  # Ubicación para almacenar las imágenes Docker y los artefactos
    paths:
      - 'api/*'  # Ruta para los artefactos del backend
      - 'site/*'  # Ruta para los artefactos del frontend

# Especifica el nombre del bucket para los registros de la compilación
logsBucket: 'gs://proyecto-jenkins-gcp'
